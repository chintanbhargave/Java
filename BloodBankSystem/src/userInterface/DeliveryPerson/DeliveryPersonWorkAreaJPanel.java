/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.DeliveryPerson;

import Business.BloodBank.BloodBank;
import Business.DeliverySystem.DeliveryPerson;
import Business.Request.Request;
import Business.Request.RequestDirectory;
import Business.System.Ecosystem;
import Business.User.User;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreyakanhe
 */
public class DeliveryPersonWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryPersonWorkAreaJPanel
     */
    private Ecosystem ecosystem;
    private DeliveryPerson deliveryPerson;

    public DeliveryPersonWorkAreaJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.deliveryPerson = (DeliveryPerson) u;
        initComponents();
        populatetblDeliveryData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populatetblDeliveryData() {

        DefaultTableModel model = (DefaultTableModel) tblDeliveryData.getModel();
        ArrayList<Request> assgnReq = ecosystem.getRequestDirectory().getAssigned();

        for (Request r : assgnReq) {
            if (r.getDeliveryPersonId() == deliveryPerson.getId()) {
                String bbName = ecosystem.getBloodBankDirectory().getBBNameById(r.getBloodBankId());

                model.addRow(new Object[]{r.getId(), bbName, r.getBloodType(), r.getUnit(), "Brigham", r.getStatus()});

            }
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDeliveryData = new javax.swing.JTable();
        btnStartDelivery = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1200, 600));

        tblDeliveryData.setBackground(new java.awt.Color(153, 204, 255));
        tblDeliveryData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "BloodBank Name", "BloodType", "Units", "Hospital Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDeliveryData);

        btnStartDelivery.setBackground(new java.awt.Color(204, 0, 0));
        btnStartDelivery.setForeground(new java.awt.Color(255, 255, 255));
        btnStartDelivery.setText("Delivered");
        btnStartDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartDeliveryActionPerformed(evt);
            }
        });

        btnAccept.setBackground(new java.awt.Color(204, 0, 0));
        btnAccept.setForeground(new java.awt.Color(255, 255, 255));
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/blooddelivery.jpeg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Oriya Sangam MN", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Welcome to Brigham Delivery System");

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("You are logged in as : Delivery Person");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnAccept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStartDelivery)))
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAccept, btnStartDelivery});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAccept)
                            .addComponent(btnStartDelivery))))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAccept, btnStartDelivery});

    }// </editor-fold>//GEN-END:initComponents

    private void btnStartDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartDeliveryActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblDeliveryData.getModel();
        int row = tblDeliveryData.getSelectedRow();// row selected
        int reqId = (Integer.parseInt(tblDeliveryData.getModel().getValueAt(row, 0).toString()));// req id
        int unit = (Integer.parseInt(tblDeliveryData.getModel().getValueAt(row, 3).toString()));

        RequestDirectory reqDir = ecosystem.getRequestDirectory();
        ArrayList<Request> arq = reqDir.getAccepted();

        for (Request r : arq) {
            if (r.getId() == reqId) {
                r.setUnit(unit);
                r.setStatus(Request.Status.Completed);
                model.setValueAt(r.getStatus(), row, 5);

            }
        }
    }//GEN-LAST:event_btnStartDeliveryActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblDeliveryData.getModel();
        int row = tblDeliveryData.getSelectedRow();// row selected
        int reqId = (Integer.parseInt(tblDeliveryData.getModel().getValueAt(row, 0).toString()));// req id

        RequestDirectory reqDir = ecosystem.getRequestDirectory();
        ArrayList<Request> arq = reqDir.getAssigned();

        for (Request r : arq) {
            if (r.getId() == reqId) {
                r.setStatus(Request.Status.Accepted);
                model.setValueAt(r.getStatus(), row, 5);

            }
        }
    }//GEN-LAST:event_btnAcceptActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnStartDelivery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDeliveryData;
    // End of variables declaration//GEN-END:variables
}
