/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Collector;

import Business.BloodBank.BloodBank;
import Business.BloodBank.Donor;
import Business.BloodBank.DonorDirectory;
import Business.CollectionCentre.CollectionCentre;
import Business.CollectionCentre.Collector;
import Business.System.ConfigureASystem;
import Business.System.Ecosystem;
import Business.User.User;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shreyakanhe
 */
public class CollectorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CollectorWorkAreaJPanel
     */
    private Ecosystem ecosystem;
    private Collector collector;

    public CollectorWorkAreaJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.collector = (Collector) u;

        initComponents();
        displayDonors();
    }

    public void displayDonors() {

        DefaultTableModel model = (DefaultTableModel) tblDonor.getModel();
        ArrayList<Donor> donorDirectory = ecosystem.getDonorDirectory().getDonorList();
        model.setRowCount(0);

        for (Donor d : donorDirectory) {
            
            
            model.addRow(new Object[]{d.getId(), d.getName(), d.getBloodGroup()});
        }

    }

    private void collectBlood() {

        int ccId = collector.getCcId();
        CollectionCentre c = ecosystem.getCollectionCentreDirectory().getCCById(ccId);
        int bbId = c.getBbId();

        DefaultTableModel model = (DefaultTableModel) tblDonor.getModel();
        int row = tblDonor.getSelectedRow();
        String bType = tblDonor.getModel().getValueAt(row, 2).toString();//b type

        ecosystem.getBloodBankDirectory().getBBById(bbId).addBloodSample(bType, 1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonor = new javax.swing.JTable();
        btnCollect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 600));

        tblDonor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Donor ID", "Donor Name", "Blood Type", "Last Donation Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDonor);

        btnCollect.setBackground(new java.awt.Color(204, 0, 0));
        btnCollect.setForeground(new java.awt.Color(255, 255, 255));
        btnCollect.setText("Collect Blood");
        btnCollect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCollectActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/donor5.jpeg"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("You are logged in as : Collector");

        jLabel3.setFont(new java.awt.Font("Oriya Sangam MN", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Welcome to Collection Centre");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel5))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(128, 128, 128)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCollect)
                        .addGap(344, 344, 344))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCollect, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCollectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCollectActionPerformed
        // TODO add your handling code here:
        String timeStamp = new SimpleDateFormat("mm/dd/yyyy HH:mm:ss").format(new Date());
//        Date dt = new Date(Long.parseLong(timeStamp));
        
        Date currentDate = Calendar.getInstance().getTime();
        
        //collectBlood();
        int row = tblDonor.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblDonor.getModel();
        tblDonor.setValueAt("Collected !", row, 4);
        tblDonor.setValueAt(currentDate, row, 3);
        tblDonor.setSelectionBackground(Color.blue);
        
//        Object[] columnData = new Object[tblDonor.getRowCount()];  // One entry for each row
//        Object[] rowData = new Object[tblDonor.getRowCount()];
//        for (int i = 0; i < tblDonor.getRowCount(); i++) {  // Loop through the rows
//            // Record the 5th column value (index 4)
//            rowData[i] = tblDonor.getValueAt(i, 4);
//            if(rowData[i]!="Collected")
//            {
//                tblDonor.setValueAt(currentDate, row, 3);
//            }
//        }

        int dId = Integer.parseInt(tblDonor.getValueAt(row, 0).toString()); // donorId
        ecosystem.getDonorDirectory().changeHistory(dId, currentDate);
        
        

    }//GEN-LAST:event_btnCollectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCollect;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDonor;
    // End of variables declaration//GEN-END:variables

}
