/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.SuperAdmin;

import Business.BloodBank.Assistant;
import Business.BloodBank.AssistantDirectory;
import Business.BloodBank.Donor;
import Business.BloodBank.DonorDirectory;
import Business.CollectionCentre.Collector;
import Business.CollectionCentre.CollectorDirectory;
import Business.DeliverySystem.DeliveryPerson;
import Business.DeliverySystem.DeliveryPersonDirectory;
import Business.DeliverySystem.Supervisor;
import Business.DeliverySystem.SupervisorDirectory;
import Business.Hospital.Doctor;
import Business.Hospital.DoctorDirectory;
import Business.Hospital.JrDoctor;
import Business.Hospital.JrDoctorDirectory;
import Business.SuperAdmin.SuperAdmin;
import Business.System.ConfigureASystem;
import Business.System.Ecosystem;
import Business.User.User;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalyanijohare
 */
public class SuperAdminAreaWorkJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SuperAdminAreaWorkJPanel
     */
    private Ecosystem ecosystem;
    private SuperAdmin superAdmin;

    public SuperAdminAreaWorkJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.superAdmin = (SuperAdmin) u;
        initComponents();
        jPanelview.setVisible(false);
        jPanelData.setVisible(false);
        jPanelDel.setVisible(false);

    }

    public void viewAll() {

        jPanelview.setVisible(true);

        String role = jComboRole.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) tblViewAll.getModel();

        if (role == "Doctor") {
            model.setRowCount(0);
            ArrayList<Doctor> drDirec = ecosystem.getDoctorDirectory().getDoctorDirectory();

            for (Doctor d : drDirec) {
                model.addRow(new Object[]{d.getId(), d.getName(), d.getUserName(), d.getPassword()});
            }

        } else if (role == "JrDoctor") {
            model.setRowCount(0);
            ArrayList<JrDoctor> jdrDirec = ecosystem.getJrDoctorDirectory().getJrDrDirectory();

            for (JrDoctor jd : jdrDirec) {
                model.addRow(new Object[]{jd.getId(), jd.getName(), jd.getUserName(), jd.getPassword()});
            }

        } else if (role == "Assistant") {
            model.setRowCount(0);
            ArrayList<Assistant> asstDir = ecosystem.getAssistantDirectory().getAssistantDirectory();

            for (Assistant a : asstDir) {
                model.addRow(new Object[]{a.getId(), a.getName(), a.getUserName(), a.getPassword()});
            }

        } else if (role == "Donor") {
            model.setRowCount(0);
            ArrayList<Donor> dnrList = ecosystem.getDonorDirectory().getDonorList();

            for (Donor d : dnrList) {
                model.addRow(new Object[]{d.getId(), d.getName(), d.getUserName(), d.getPassword()});
            }

        } else if (role == "Collector") {
            model.setRowCount(0);
            ArrayList<Collector> cl = ecosystem.getCollectorDirectory().getCollectorDirectory();

            for (Collector c : cl) {
                model.addRow(new Object[]{c.getId(), c.getName(), c.getUserName(), c.getPassword()});
            }

        } else if (role == "Supervisor") {
            model.setRowCount(0);
            ArrayList<Supervisor> sup = ecosystem.getSupervisorDirectory().getSupervisorDirectory();

            for (Supervisor s : sup) {
                model.addRow(new Object[]{s.getId(), s.getName(), s.getUserName(), s.getPassword()});
            }

        } else if (role == "DeliveryPerson") {
            model.setRowCount(0);
            ArrayList<DeliveryPerson> dpl = ecosystem.getDeliveryPersonDirectory().getDeliveryPersonList();

            for (DeliveryPerson d : dpl) {
                model.addRow(new Object[]{d.getId(), d.getName(), d.getUserName(), d.getPassword()});
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboRole = new javax.swing.JComboBox<>();
        btnCreate = new javax.swing.JButton();
        btnUpdt = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnViewAll = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanelview = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewAll = new javax.swing.JTable();
        jPanelData = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        txtUname = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanelDel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnDelid = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 600));

        jLabel1.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel1.setText("Role");

        jComboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "JrDoctor", "Assistant", "Donor", "Collector", "Supervisor", "DeliveryPerson" }));
        jComboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRoleActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 0, 0));
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdt.setBackground(new java.awt.Color(204, 0, 0));
        btnUpdt.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdt.setText("Update");
        btnUpdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdtActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnViewAll.setBackground(new java.awt.Color(204, 0, 0));
        btnViewAll.setForeground(new java.awt.Color(255, 255, 255));
        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("You are logged in as : Super Admin");

        jPanelview.setBackground(new java.awt.Color(255, 255, 255));

        tblViewAll.setBackground(new java.awt.Color(51, 204, 255));
        tblViewAll.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblViewAll.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblViewAll);

        javax.swing.GroupLayout jPanelviewLayout = new javax.swing.GroupLayout(jPanelview);
        jPanelview.setLayout(jPanelviewLayout);
        jPanelviewLayout.setHorizontalGroup(
            jPanelviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelviewLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanelviewLayout.setVerticalGroup(
            jPanelviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelviewLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        jPanelData.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel4.setText("UserName");

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("Password");

        btnSubmit.setBackground(new java.awt.Color(204, 0, 0));
        btnSubmit.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(204, 0, 0));
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDataLayout = new javax.swing.GroupLayout(jPanelData);
        jPanelData.setLayout(jPanelDataLayout);
        jPanelDataLayout.setHorizontalGroup(
            jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDataLayout.createSequentialGroup()
                        .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(53, 53, 53)
                        .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(txtUname)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelDataLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnSubmit)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanelDataLayout.setVerticalGroup(
            jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanelDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnReset))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanelDel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel6.setText("Enter ID");

        btnDelid.setBackground(new java.awt.Color(204, 0, 0));
        btnDelid.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnDelid.setForeground(new java.awt.Color(255, 255, 255));
        btnDelid.setText("Delete");
        btnDelid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelidActionPerformed(evt);
            }
        });

        btnReset1.setBackground(new java.awt.Color(204, 0, 0));
        btnReset1.setForeground(new java.awt.Color(255, 255, 255));
        btnReset1.setText("Reset");
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDelLayout = new javax.swing.GroupLayout(jPanelDel);
        jPanelDel.setLayout(jPanelDelLayout);
        jPanelDelLayout.setHorizontalGroup(
            jPanelDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel6)
                .addGap(35, 35, 35)
                .addGroup(jPanelDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanelDelLayout.setVerticalGroup(
            jPanelDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelDelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelid)
                .addGap(18, 18, 18)
                .addComponent(btnReset1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/admin.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jPanelview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanelData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jPanelDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(257, 257, 257)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboRole, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                        .addComponent(btnCreate)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdt)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnViewAll)
                                        .addGap(29, 29, 29)))))))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdt, btnViewAll});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCreate)
                            .addComponent(btnUpdt)
                            .addComponent(btnDelete)
                            .addComponent(btnViewAll)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanelview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCreate, btnDelete, btnUpdt, btnViewAll});

    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        jPanelData.setVisible(true);
        btnSubmit.setVisible(true);

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        // TODO add your handling code here:
        viewAll();
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void jComboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboRoleActionPerformed

    private void btnUpdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdtActionPerformed
        // TODO add your handling code here:
        
        jPanelData.setVisible(true);
        jPanelDel.setVisible(true);
        btnSubmit.setVisible(false);
        btnDelid.setVisible(false);
        btnUpdate.setVisible(true);
        
        
    }//GEN-LAST:event_btnUpdtActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String role = jComboRole.getSelectedItem().toString();

        ArrayList<User> userDir = ecosystem.getUserDirectory();

        String name = txtName.getText();
        String userName = txtUname.getText();
        String pass = "";
        int flag = 0;

        if (Pattern.matches("((?=.*[a-z])(?=.*\\d)(?=.*[A-Z])(?=.*[@#$%!]).{5,40})", txtPass.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Password should contain at least one digit, one lower case character, one upper case character, one special character");
            flag = 1;
        } else {
            pass = txtPass.getText();
        }

        if (role == "Doctor") {

            if (flag == 0) {
                DoctorDirectory docDir = ecosystem.getDoctorDirectory();
                Doctor d = new Doctor(name, userName, pass);
                docDir.addDoctorToDirectory(d);
                userDir.add(d);
                JOptionPane.showMessageDialog(this, "Doctor Created Successfully!");
            }
        } else if (role == "JrDoctor") {
            if (flag == 0) {
                JrDoctorDirectory jrdocDir = ecosystem.getJrDoctorDirectory();
                JrDoctor jd = new JrDoctor(name, userName, pass);
                jrdocDir.addJrDoctorToDirectory(jd);
                userDir.add(jd);
                JOptionPane.showMessageDialog(this, "JrDoctor Created Successfully!");
            }

        } else if (role == "Assistant") { ////////////////////////////////////////////////////////////////
            if (flag == 0) {
                AssistantDirectory astDir = ecosystem.getAssistantDirectory();
                Assistant ast = new Assistant(name, userName, pass);
                astDir.addAssistantToDirectory(ast);
                userDir.add(ast);
                JOptionPane.showMessageDialog(this, "Assistant Created Successfully!");
            }

        } else if (role == "Donor") {
            if (flag == 0) {
                DonorDirectory dDir = ecosystem.getDonorDirectory();
                Donor d = new Donor(name, userName, pass);
                dDir.addDonorToDirectory(d);
                userDir.add(d);
                JOptionPane.showMessageDialog(this, "Donor Created Successfully!");
            }

        } else if (role == "Collector") {
            if (flag == 0) {
                CollectorDirectory cDir = ecosystem.getCollectorDirectory();
                Collector c = new Collector(name, userName, pass);
                cDir.addCollectorToDirectory(c);
                userDir.add(c);
                JOptionPane.showMessageDialog(this, "Collector Created Successfully!");
            }

        } else if (role == "Supervisor") {
            if (flag == 0) {
                SupervisorDirectory sDir = ecosystem.getSupervisorDirectory();
                Supervisor s = new Supervisor(name, userName, pass);
                sDir.addSupervisorToDirectory(s);
                userDir.add(s);
                JOptionPane.showMessageDialog(this, "Supervisor Created Successfully!");
            }

        } else if (role == "DeliveryPerson") {
            if (flag == 0) {
                DeliveryPersonDirectory dpDir = ecosystem.getDeliveryPersonDirectory();
                DeliveryPerson dp = new DeliveryPerson(name, userName, pass);
                dpDir.addDeliveryPersonToDirectory(dp);
                userDir.add(dp);
                JOptionPane.showMessageDialog(this, "Delivery Person Created Successfully!");
            }

        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        txtUname.setText("");
        txtPass.setText("");
        jPanelview.setVisible(false);
        jPanelData.setVisible(false);

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        jPanelDel.setVisible(true);
        btnDelid.setVisible(true);
        btnUpdate.setVisible(false);

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDelidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelidActionPerformed
        // TODO add your handling code here:
        String role = jComboRole.getSelectedItem().toString();
        int id = Integer.parseInt(txtId.getText().toString());

        ArrayList<User> userDir = ecosystem.getUserDirectory();

        if (role == "Doctor") {

            DoctorDirectory drDir = ecosystem.getDoctorDirectory();
            Doctor doc = drDir.getDrById(id);
            userDir.remove(doc);
            drDir.removeDrFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "Doctor removed Successfully!");

        } else if (role == "JrDoctor") {

            JrDoctorDirectory jrDir = ecosystem.getJrDoctorDirectory();
            JrDoctor jdoc = jrDir.getJrDrById(id);
            userDir.remove(jdoc);
            jrDir.removeJrDrFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "JrDoctor removed Successfully!");

        } else if (role == "Assistant") {

            AssistantDirectory astDir = ecosystem.getAssistantDirectory();
            Assistant ast = astDir.getAssistantById(id);
            userDir.remove(id);
            astDir.removeAssistantFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "Assistant removed Successfully!");

        } else if (role == "Donor") {

            DonorDirectory dDir = ecosystem.getDonorDirectory();
            Donor d = dDir.getDonorById(id);
            userDir.remove(d);
            dDir.removeDonorFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "Donor removed Successfully!");

        } else if (role == "Collector") {

            CollectorDirectory cDir = ecosystem.getCollectorDirectory();
            Collector c = cDir.getCollectorById(id);
            userDir.remove(c);
            cDir.removeCollectorFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "Collector removed Successfully!");

        } else if (role == "Supervisor") {

            SupervisorDirectory sDir = ecosystem.getSupervisorDirectory();
            Supervisor s = sDir.getSupervisorById(id);
            userDir.remove(s);
            sDir.removeSupervisorFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "Supervisor removed Successfully!");

        } else if (role == "DeliveryPerson") {

            DeliveryPersonDirectory dpDir = ecosystem.getDeliveryPersonDirectory();
            DeliveryPerson dp = dpDir.getDeliveryPersonById(id);
            userDir.remove(dp);
            dpDir.removeDeliveryPersonFromDirectoryById(id);
            JOptionPane.showMessageDialog(this, "DeliveryPerson removed Successfully!");
        }
    }//GEN-LAST:event_btnDelidActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        // TODO add your handling code here:
        txtId.setText("");
        jPanelview.setVisible(false);
        jPanelDel.setVisible(false);
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String role = jComboRole.getSelectedItem().toString();
        
        int id = Integer.parseInt(txtId.getText().toString());
        
        
        String name = txtName.getText();
        String userName = txtUname.getText();
        String pass = txtPass.getText();

        ArrayList<User> userDir = ecosystem.getUserDirectory();
        
        if (role == "Doctor") {
            
            DoctorDirectory drDir = ecosystem.getDoctorDirectory();
            Doctor dr = drDir.getDrById(id);
            dr.setUserName(userName);
            dr.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
            
            
        } else if (role == "JrDoctor") {
            
            JrDoctorDirectory jrDir = ecosystem.getJrDoctorDirectory();
            JrDoctor jdr = jrDir.getJrDrById(id);
            jdr.setUserName(userName);
            jdr.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
            
        } else if (role == "Assistant") {
            
            AssistantDirectory astDir = ecosystem.getAssistantDirectory();
            Assistant ast = astDir.getAssistantById(id);
            ast.setUserName(userName);
            ast.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
            
        } else if (role == "Donor") {
            
            DonorDirectory dDir = ecosystem.getDonorDirectory();
            Donor d = dDir.getDonorById(id);
            d.setUserName(userName);
            d.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
            
        } else if (role == "Collector") {
            CollectorDirectory cDir = ecosystem.getCollectorDirectory();
            Collector c = cDir.getCollectorById(id);
            c.setUserName(userName);
            c.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
        } else if (role == "Supervisor") {
            
            SupervisorDirectory sDir = ecosystem.getSupervisorDirectory();
            Supervisor s = sDir.getSupervisorById(id);
            s.setUserName(userName);
            s.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
        } else if (role == "DeliveryPerson") {
            
            DeliveryPersonDirectory dpDir = ecosystem.getDeliveryPersonDirectory();
            DeliveryPerson dp = dpDir.getDeliveryPersonById(id);
            dp.setUserName(userName);
            dp.setPassword(pass);
            ecosystem.updateUserDirectory(id, name, userName, pass);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelid;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdt;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JComboBox<String> jComboRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanelData;
    private javax.swing.JPanel jPanelDel;
    private javax.swing.JPanel jPanelview;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblViewAll;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUname;
    // End of variables declaration//GEN-END:variables
}
