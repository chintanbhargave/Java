/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Supervisor;

import Business.DeliverySystem.DeliveryPerson;
import Business.DeliverySystem.Supervisor;
import Business.Request.Request;
import Business.Request.RequestDirectory;
import Business.System.Ecosystem;
import Business.User.User;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalyanijohare
 */
public class SupervisorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupervisorWorkAreaJPanel
     */
    private Ecosystem ecosystem;
    private Supervisor supervisor;
    
    public SupervisorWorkAreaJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.supervisor = (Supervisor) u;
        initComponents();
        jPanelHistory.setVisible(false);
        populatetblRequestInfo();
        populatejcomboDeliveryPerson();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void populatetblRequestInfo(){
        
        DefaultTableModel model = (DefaultTableModel) tblRequestInfo.getModel();
        ArrayList<Request> actReq = ecosystem.getRequestDirectory().getActiveReq();
        
        for(Request r: actReq){
            int bname = r.getBloodBankId();
            model.addRow(new Object[]{r.getId(), "Brigham",r.getBloodType(),r.getUnit(),r.getBloodBankId() ,r.getStatus()});
        }   
       
    }
    
    private void populatejcomboDeliveryPerson(){
        ArrayList<DeliveryPerson> dpList = ecosystem.getDeliveryPersonDirectory().getDeliveryPersonList();
        for(DeliveryPerson d: dpList){
            if(d.isIsAvaliable()){
                jcomboDeliveryPerson.addItem(d.getName());
            }    
        }
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestInfo = new javax.swing.JTable();
        jcomboDeliveryPerson = new javax.swing.JComboBox<>();
        lblAvailableDeliveryPerson = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelHistory = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHistory = new javax.swing.JTable();
        btnHistory = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 600));

        tblRequestInfo.setBackground(new java.awt.Color(153, 204, 255));
        tblRequestInfo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblRequestInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Hospital Name", "BloodType", "Units", "Blood Bank", "Status", "Delivery Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequestInfo);

        lblAvailableDeliveryPerson.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        lblAvailableDeliveryPerson.setText("Available Delivery Person");

        btnAssign.setBackground(new java.awt.Color(204, 0, 0));
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/supervisor.jpeg"))); // NOI18N

        jPanelHistory.setBackground(new java.awt.Color(255, 255, 255));

        tblHistory.setBackground(new java.awt.Color(153, 204, 255));
        tblHistory.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Hospital Name", "BloodType", "Units", "Blood Bank", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblHistory);

        javax.swing.GroupLayout jPanelHistoryLayout = new javax.swing.GroupLayout(jPanelHistory);
        jPanelHistory.setLayout(jPanelHistoryLayout);
        jPanelHistoryLayout.setHorizontalGroup(
            jPanelHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE)
        );
        jPanelHistoryLayout.setVerticalGroup(
            jPanelHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHistoryLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        btnHistory.setBackground(new java.awt.Color(204, 0, 0));
        btnHistory.setForeground(new java.awt.Color(255, 255, 255));
        btnHistory.setText("View History");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Oriya Sangam MN", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Welcome to Delivery System");

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("You are logged in as : Supervisor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(lblAvailableDeliveryPerson)
                                .addGap(44, 44, 44)
                                .addComponent(jcomboDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvailableDeliveryPerson)
                            .addComponent(jcomboDeliveryPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAssign))
                        .addGap(18, 18, 18)
                        .addComponent(btnHistory)
                        .addGap(21, 21, 21)
                        .addComponent(jPanelHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        String dpName = jcomboDeliveryPerson.getSelectedItem().toString();//deliveryperson
        int dpId = 0;
        
        
        ArrayList<DeliveryPerson> dpList = ecosystem.getDeliveryPersonDirectory().getDeliveryPersonList();
        
        for(DeliveryPerson d: dpList){
            
            if(d.getName() == dpName){
                dpId = d.getId();
                d.setIsAvaliable(false);
            }
        }
        
        DefaultTableModel model = (DefaultTableModel) tblRequestInfo.getModel();
        int row = tblRequestInfo.getSelectedRow();// row selected
        int reqId = (Integer.parseInt(tblRequestInfo.getModel().getValueAt(row, 0).toString()));// req id
        
        RequestDirectory reqDir = ecosystem.getRequestDirectory();
           ArrayList<Request> arq = reqDir.getActiveReq();
           
           for(Request r:arq)
           {
               if(r.getId() == reqId)
               {
                   r.setStatus(Request.Status.Assigned);
                   jcomboDeliveryPerson.removeAllItems();
                   populatejcomboDeliveryPerson();
                   r.setDeliveryPersonId(dpId);
                   model.setValueAt(r.getStatus(), row, 5);
                   model.setValueAt(dpName, row, 6);
               }
           }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        jPanelHistory.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblHistory.getModel();
        
        ArrayList<Request> cmpReq = ecosystem.getRequestDirectory().getCompleted();
        
        for(Request r: cmpReq){
            model.addRow(new Object[]{r.getId(),"Brigham" ,r.getBloodType(),r.getUnit(), r.getBloodBankId(),r.getStatus()});
        }
    }//GEN-LAST:event_btnHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelHistory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcomboDeliveryPerson;
    private javax.swing.JLabel lblAvailableDeliveryPerson;
    private javax.swing.JTable tblHistory;
    private javax.swing.JTable tblRequestInfo;
    // End of variables declaration//GEN-END:variables
}
