/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.JrDoctor;

import Business.BloodBank.BloodBank;
import Business.Hospital.JrDoctor;
import Business.Request.Request;
import Business.Request.RequestDirectory;
import Business.System.Ecosystem;
import Business.User.User;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalyanijohare
 */
public class JrDoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form JrDoctorWorkAreaJPanel
     */
    private Ecosystem ecosystem;
    private JrDoctor jrDr;
    private static HashMap<String,Integer> bbInfoMap = new HashMap();
    
    public JrDoctorWorkAreaJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.jrDr = (JrDoctor) u;
        initComponents();
        populatejcomboBB();
        populateRaisedRequestTable(e);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnForwardReq = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblForwardedRequest = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRaisedRequests = new javax.swing.JTable();
        jcomboBB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setToolTipText("");
        setMinimumSize(new java.awt.Dimension(1200, 600));

        jLabel1.setFont(new java.awt.Font("Oriya Sangam MN", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));

        btnForwardReq.setBackground(new java.awt.Color(204, 0, 0));
        btnForwardReq.setForeground(new java.awt.Color(255, 255, 255));
        btnForwardReq.setText("Forward Request");
        btnForwardReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardReqActionPerformed(evt);
            }
        });

        tblForwardedRequest.setBackground(new java.awt.Color(153, 204, 255));
        tblForwardedRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestID", "Blood Bank", "Type of Blood", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblForwardedRequest.setToolTipText("");
        jScrollPane1.setViewportView(tblForwardedRequest);

        tblRaisedRequests.setBackground(new java.awt.Color(153, 204, 255));
        tblRaisedRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Dr ID", "Type of blood", "Units", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRaisedRequests.setToolTipText("");
        jScrollPane2.setViewportView(tblRaisedRequests);

        jcomboBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboBBActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Oriya Sangam MN", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Welcome to Brigham Hospital");

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("You are logged in as : Jr Doctor");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/nurse.jpeg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcomboBB, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnForwardReq)
                                .addGap(90, 90, 90))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnForwardReq)
                            .addComponent(jcomboBB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //public void populateBBAvail(){
//        String bloodType = jcomboBlood.getSelectedItem().toString();
//        String value = jcomboQty.getSelectedItem().toString();
//        int qty = Integer.parseInt(value);
//        
//        DefaultTableModel model = (DefaultTableModel) tblBBAvail.getModel();
//        model.setRowCount(0);
//        
//        ArrayList<BloodBank> bbList = ecosystem.getBloodBankDirectory().getBloodBankList();
//        
//        for(BloodBank b: bbList){
//            
//            HashMap<String,Integer> bloodAvail = b.getBloodStorage();
//            Iterator it = bloodAvail.entrySet().iterator();
//            
//            while(it.hasNext()){
//                
//                HashMap.Entry pair = (HashMap.Entry)it.next();
//                
//                if(pair.getKey().equals(bloodType)){
//                    
//                    if((int)pair.getValue() >= qty){
//                        
//                        model.addRow(new Object[]{b.getId(),b.getName(),pair.getKey(),""});
//                    }
//                }
//            }
//            
//        }
//        
//    }
    private void populateRaisedRequestTable(Ecosystem e) {

        RequestDirectory reqDir = e.getRequestDirectory();
        DefaultTableModel model = (DefaultTableModel) tblRaisedRequests.getModel();
        ArrayList<Request> raisedReq = reqDir.getRaisedReq();

        for (Request r : raisedReq) {
            
            model.addRow(new Object[]{r.getId(), r.getDoctorId(), r.getBloodType(), r.getUnit(),r.getStatus()});
        }

    }
    
    private void populatejcomboBB(){
        
        ArrayList<BloodBank> bbList = ecosystem.getBloodBankDirectory().getBloodBankList();
        
        for(BloodBank b: bbList){
            bbInfoMap.put(b.getName(), b.getId());
            jcomboBB.addItem(b.getName());
            //jcomboBB.setSelectedIndex(b.getId() + 1);
        }
        
    }

    private void btnForwardReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardReqActionPerformed
        // TODO add your handling code here:
        
//        int row = tblRaisedRequests.getSelectedRow();
//        String bloodType = tblRaisedRequests.getModel().getValueAt(row, 1).toString();
//        int qty = Integer.parseInt(tblRaisedRequests.getModel().getValueAt(row, 2).toString());
//        
//        DefaultTableModel model = (DefaultTableModel) tblForwardedRequest.getModel();
//        
//        //int id = (Integer.parseInt(tblRaisedRequests.getModel().getValueAt(row, 0).toString()));
//        
//        ArrayList<BloodBank> bbList = ecosystem.getBloodBankDirectory().getBloodBankList();
//        
//        for (BloodBank b : bbList) {
//
//            HashMap<String, Integer> bloodAvail = b.getBloodStorage();
//            Iterator it = bloodAvail.entrySet().iterator();
//
//            while (it.hasNext()) {
//
//                HashMap.Entry pair = (HashMap.Entry) it.next();
//
//                if ((r.getBloodType()).equals(bloodType)) {
//
//                    if ((int) r.getUnit() >= qty) {
//                        r.setStatus(Request.Status.Forwarded);
//                        model.addRow(new Object[]{id,r.getBloodBankId(),r.getBloodType(),r.getStatus()});
//                    }
//                }
//            }
//
//        }
        
           int row = tblRaisedRequests.getSelectedRow();
           DefaultTableModel model = (DefaultTableModel) tblForwardedRequest.getModel();
           
           int reqId = Integer.parseInt(tblRaisedRequests.getModel().getValueAt(row, 0).toString());//req id
           String bbname = (jcomboBB.getSelectedItem()).toString();// bb
           //int bbId = jcomboBB.getSelectedIndex();// bbid
           String bloodtypeRR = tblRaisedRequests.getModel().getValueAt(row, 2).toString();
           
           RequestDirectory reqDir = ecosystem.getRequestDirectory();
           ArrayList<Request> rq = reqDir.getRaisedReq();
           
           for(Request r:rq)
           {
               if(r.getId() == reqId)
               {
                   r.setBloodBankId(bbInfoMap.get(bbname));
                   r.setStatus(Request.Status.Forwarded);
                   model.addRow(new Object[]{r.getId(), bbname, r.getBloodType(), r.getStatus()});
               }
           }
           
    }//GEN-LAST:event_btnForwardReqActionPerformed

    private void jcomboBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboBBActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jcomboBBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnForwardReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jcomboBB;
    private javax.swing.JTable tblForwardedRequest;
    private javax.swing.JTable tblRaisedRequests;
    // End of variables declaration//GEN-END:variables
}
