/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.BBAssistant;

import Business.BloodBank.Assistant;
import Business.BloodBank.BloodBank;
import Business.Request.Request;
import Business.Request.RequestDirectory;
import Business.System.ConfigureASystem;
import Business.System.Ecosystem;
import Business.User.User;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalyanijohare
 */
public class AssistantWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssistantWorkArea
     */
    private Ecosystem ecosystem;
    private Assistant assistant;
    
    public AssistantWorkAreaJPanel(Ecosystem e, User u) {
        this.ecosystem = e;
        this.assistant = (Assistant) u;
        initComponents();
        jPanelBAv.setVisible(false);
        
        
       
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void displayAvailabitlity() {
        
        //DefaultTableModel model = (DefaultTableModel) tblFwdRequest.getModel();
        int row = tblFwdRequest.getSelectedRow();
        String bType = tblFwdRequest.getModel().getValueAt(row, 3).toString();
        
        DefaultTableModel model = (DefaultTableModel) tblAvailability.getModel();
        ArrayList<BloodBank> bbList  = ecosystem.getBloodBankDirectory().getBloodBankList();
        BloodBank currentBB = null;
        for(BloodBank b: bbList){
            if(b.getId() == assistant.getBloodBankId()){
                currentBB = b;
            }
        }
        
        HashMap<String, Integer> hm = currentBB.getBloodStorage();
        Iterator it = hm.entrySet().iterator();
        while (it.hasNext()) {
            HashMap.Entry pair = (HashMap.Entry) it.next();
            if(pair.getKey() == bType){
                model.addRow(new Object[]{pair.getKey(), pair.getValue()});
            }
            
        }
    }
    
    
    
    public void populateForwardedRequests() {
        DefaultTableModel model = (DefaultTableModel) tblFwdRequest.getModel();
        //int reqId = (Integer.parseInt(tblFwdRequest.getModel().getValueAt(row, 0).toString()));
        RequestDirectory reqDir = ecosystem.getRequestDirectory();
        ArrayList<Request> rq = reqDir.getForwardedReq();
        
        for (Request r : rq) {
            if(r.getBloodBankId() == assistant.getBloodBankId()){
                model.addRow(new Object[]{r.getId(), r.gethId(), "Brigham", r.getBloodType(), r.getUnit(), r.getStatus()});
            }
            
        }
    }
    
    public void approveReq(){
        
        DefaultTableModel model = (DefaultTableModel) tblFwdRequest.getModel();
        int row = tblFwdRequest.getSelectedRow();
        int reqId = (Integer.parseInt(tblFwdRequest.getModel().getValueAt(row, 0).toString()));//req id
  
        RequestDirectory reqDir = ecosystem.getRequestDirectory();
        ArrayList<Request> rq = reqDir.getForwardedReq();
        
        for(Request r:rq)
        {
            if(r.getId() == reqId)
            {
               
                r.setStatus(Request.Status.Active);
                r.setBloodBankId(assistant.getBloodBankId());
                //model.addRow(new Object[]{r.getId(), r.gethId(), "Brigham", r.getBloodType(), r.getUnit(), r.getStatus()});
                model.setValueAt(r.getStatus(), row, 5);
            }
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAvailability = new javax.swing.JButton();
        btnBloodRequest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnApprove = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFwdRequest = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanelBAv = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAvailability = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1200, 600));

        btnAvailability.setBackground(new java.awt.Color(204, 0, 0));
        btnAvailability.setForeground(new java.awt.Color(255, 255, 255));
        btnAvailability.setText("Check Availability");
        btnAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailabilityActionPerformed(evt);
            }
        });

        btnBloodRequest.setBackground(new java.awt.Color(204, 0, 0));
        btnBloodRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnBloodRequest.setText("Check Blood Requests");
        btnBloodRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloodRequestActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 0, 0));
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Select particular row for approving request");

        btnApprove.setBackground(new java.awt.Color(204, 0, 0));
        btnApprove.setForeground(new java.awt.Color(255, 255, 255));
        btnApprove.setText("Approve Request");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/images/bbAssistant1.jpeg"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel4.setText("Check Blood Availability");

        jLabel5.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel5.setText("Approve Request From Hospital");

        tblFwdRequest.setBackground(new java.awt.Color(153, 204, 255));
        tblFwdRequest.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblFwdRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "Hospital ID", "Hospital Name", "Blood Type", "Units", "Status"
            }
        ));
        tblFwdRequest.setToolTipText("");
        jScrollPane1.setViewportView(tblFwdRequest);

        jLabel2.setFont(new java.awt.Font("Oriya Sangam MN", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Welcome to Blood Bank ");

        jLabel6.setFont(new java.awt.Font("Oriya Sangam MN", 1, 14)); // NOI18N
        jLabel6.setText("You are logged in as : Assistant");

        jPanelBAv.setBackground(new java.awt.Color(255, 255, 255));

        tblAvailability.setBackground(new java.awt.Color(153, 204, 255));
        tblAvailability.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblAvailability.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood Type", "Available Units"
            }
        ));
        jScrollPane2.setViewportView(tblAvailability);

        javax.swing.GroupLayout jPanelBAvLayout = new javax.swing.GroupLayout(jPanelBAv);
        jPanelBAv.setLayout(jPanelBAvLayout);
        jPanelBAvLayout.setHorizontalGroup(
            jPanelBAvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBAvLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanelBAvLayout.setVerticalGroup(
            jPanelBAvLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBAvLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(167, 167, 167)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBAv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel4)))
                            .addComponent(btnBloodRequest)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBloodRequest, jLabel1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(btnBloodRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAvailability)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBAv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnApprove, btnAvailability, btnBloodRequest, jLabel1});

    }// </editor-fold>//GEN-END:initComponents

    private void btnAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailabilityActionPerformed
        // TODO add your handling code here:
        jPanelBAv.setVisible(true);
        
        
        displayAvailabitlity();
        
        

    }//GEN-LAST:event_btnAvailabilityActionPerformed

    private void btnBloodRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloodRequestActionPerformed
        // TODO add your handling code here:
        populateForwardedRequests();
        
    }//GEN-LAST:event_btnBloodRequestActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
        approveReq();
        
    }//GEN-LAST:event_btnApproveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnAvailability;
    private javax.swing.JButton btnBloodRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanelBAv;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAvailability;
    private javax.swing.JTable tblFwdRequest;
    // End of variables declaration//GEN-END:variables
}
